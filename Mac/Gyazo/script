#!/usr/bin/env ruby

require 'net/http'
require "rexml/document"
include REXML

# get id
user = IO.popen("whoami", "r+").gets.chomp
program = ARGV[0].to_s

id = '486690f872c678126a2c09a9e196ce1b'

# capture png file
timestamp = `date +"Screen Shot %Y-%m-%d at %H.%M.%S %p"`
tmpfile = "/Users/#{user}/Screenshots/#{timestamp.chomp}.png"
imagefile = ARGV[1]

if imagefile && File.exist?(imagefile) then
    system "sips -s format png \"#{imagefile}\" --out \"#{tmpfile}\""
    else
    system "screencapture -i \"#{tmpfile}\""
end

if !File.exist?(tmpfile) then
    exit
end

imagedata = File.read(tmpfile)
#File.delete(tmpfile)

# upload
boundary = '----BOUNDARYBOUNDARY----'

HOST = 'imgur.com'
CGI = '/api/upload.xml'
UA   = 'curl/7.30.0'

data = <<EOF
--#{boundary}\r
content-disposition: form-data; name="key"\r
\r
#{id}\r
--#{boundary}\r
content-disposition: form-data; name="image"; filename="imgur.com"\r
Content-type: "image/png"\r
\r
#{imagedata}\r
--#{boundary}--\r
EOF

header ={
    'Content-Length' => data.length.to_s,
    'Content-type' => "multipart/form-data; boundary=#{boundary}",
    'User-Agent' => UA
}

url = ''

Net::HTTP.start(HOST,80){|http|
    res = http.post(CGI,data,header)
    url = res.response.body

    }
    
    doc = Document.new url
    
    orig_image = doc.elements['rsp'].elements['original_image'].text
    delete_url = doc.elements['rsp'].elements['delete_page'].text
#thumb = doc.elements['rsp'].elements['small_thumbnail'].text

    IO.popen("pbcopy","r+"){|io|
        io.write orig_image
        io.close
    
    system "open #{orig_image}"
    system "echo \"<div style='padding:10px;width:250px;height:275px;float:left'><a href='#{orig_image}'><img src='#{tmpfile}' height=250 width=250></img></a><button style='width:250px;height:25px' onclick=javascript:location.href='#{delete_url}'> delete  </button></div>\" >> ~/Documents/imgyazo.html"


    
    
}
